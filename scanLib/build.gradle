apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "maven-publish"

android {
    compileSdkVersion 34
    buildToolsVersion "30.0.3"

    defaultConfig {

        minSdkVersion 23
        targetSdkVersion 34


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.0"
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation 'com.github.garg-lucifer:AndroidDocumentFilter:0.7.0'
    // ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    // LiveData
    api "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"
    // Lifecycles only (without ViewModel or LiveData)
    api "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"

    implementation "androidx.activity:activity-ktx:1.2.2"
    implementation "androidx.fragment:fragment-ktx:1.3.3"

    // CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-camera2:1.1.0-alpha04"
    // CameraX Lifecycle Library
    implementation "androidx.camera:camera-lifecycle:1.1.0-alpha04"
    // CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha24"

    // zoomable image view
    implementation "com.github.chrisbanes:PhotoView:2.3.0"
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation "androidx.exifinterface:exifinterface:1.3.2"

    testImplementation "junit:junit:4.13.2"
    implementation 'com.google.mlkit:object-detection:17.0.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    implementation 'com.airbnb.android:lottie:5.2.0'

}



task sourceJar(type: Jar) {
    from android.sourceSets.main.kotlin.srcDirs
    from android.sourceSets.main.java.srcDirs
    from fileTree(dir: 'src/libs', include: ['*.jar'])
    classifier "sources"
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // Adds javadocs and sources as separate jars.
                // artifact androidJavadocsJar
                artifact androidSourcesJar

                groupId 'net.vishesh.scanner'
                artifactId 'documentscanner'
            }
        }
    }
}